{
  "info": {
    "name": "Dating App API - Production",
    "description": "Core endpoints for production monitoring",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "Auth - Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": "{{base_url}}/health",
        "description": "Verify API is operational"
      },
      "response": []
    },
    {
      "name": "Auth - Register",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"{{test_name}}\",\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": "{{base_url}}/auth/register",
        "description": "User registration endpoint"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function() {",
              "    pm.expect(pm.response.code).to.equal(201);",
              "});",
              "",
              "pm.test(\"Response has valid structure\", function() {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.token).to.be.a('string');",
              "    pm.expect(jsonData.user.email).to.eql(pm.request.body.email);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Auth - Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": "{{base_url}}/auth/login",
        "description": "User authentication endpoint"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function() {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "pm.test(\"Token is received\", function() {",
              "    pm.environment.set(\"auth_token\", pm.response.json().token);",
              "    pm.expect(pm.response.json().token).to.be.a('string');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Auth - Get Current User",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{auth_token}}"
          }
        ],
        "url": "{{base_url}}/auth/me",
        "description": "Protected endpoint test"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function() {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "pm.test(\"User data returned\", function() {",
              "    pm.expect(pm.response.json().email).to.eql(\"{{test_email}}\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "https://dating-app-3eba.onrender.com/",
      "description": "Update to production URL"
    }
  ]
}